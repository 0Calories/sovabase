type Query {
  users(query: String): [User!]!
  me: User!
}

type Mutation {
  createUser(data: CreateUserInput!): AuthPayload!
  deleteUser: User!
  updateUser(data: UpdateUserInput!): User!
  login(email: String, username: String, password: String!): AuthPayload!
}

# type Subscription {

# }

type AuthPayload {
  token: String!
  user: User!
}

input CreateUserInput {
  username: String!
  email: String!
  password: String!
  bio: String
}

input UpdateUserInput {
  username: String
  email: String
  password: String
  bio: String
}

type User {
  id: ID!
  username: String!
  email: String
  password: String
  bio: String
}

enum MutationType {
  CREATED
  UPDATED
  DELETED
}